{"version":3,"file":"static/preview.f45b1932fddebe50e59e.bundle.js","sources":["webpack:///./src/components/CopyText.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\ntype CopyTextProps = {\n  text: string;\n  callback?(err: string, text: string): void;\n  children(macro: {\n    onClickToCopy(): void;\n    onBackToUncopy(): void;\n    isCopy: boolean;\n  }): React.ReactNode;\n};\ntype CopyTextState = {\n  isCopy: boolean;\n};\n\nclass CopyText extends React.PureComponent<CopyTextProps, CopyTextState> {\n  static displayName = 'CopyText';\n  static propTypes = {\n    text: PropTypes.string.isRequired,\n    callback: PropTypes.func,\n    children: PropTypes.func.isRequired\n  };\n  state = {\n    isCopy: false\n  };\n  clickToCopy = () => {\n    try {\n      const el = document.createElement('textarea');\n      el.value = this.props.text;\n      document.body.appendChild(el);\n      el.select();\n      const done = document.execCommand('copy');\n      document.body.removeChild(el);\n      if (done) {\n        this.setState(\n          _ => ({\n            isCopy: true\n          }),\n          () => {\n            if (this.props.callback) this.props.callback(null, this.props.text);\n          }\n        );\n      } else {\n        console.error(\n          CopyText.displayName +\n            ': Your broswer must be not support document.execCommand `copy` operator.'\n        );\n      }\n    } catch (err) {\n      if (this.props.callback) this.props.callback(err, null);\n    }\n  };\n  backToUncopy = () => {\n    this.setState(_ => ({\n      isCopy: false\n    }));\n  };\n  render() {\n    return this.props.children({\n      onClickToCopy: this.clickToCopy,\n      onBackToUncopy: this.backToUncopy,\n      isCopy: this.state.isCopy\n    }) as React.ReactNode;\n  }\n}\n\nexport default CopyText;\n"],"mappings":"AAmEA","sourceRoot":""}